# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UI_Menus.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QSize
from Interface import Interface


class Menu_Gestion(Interface):
    def __init__(self, MainWindow):
        super().__init__(MainWindow)
        self.listWidget = QtWidgets.QListWidget(MainWindow)
        self.listWidget.setGeometry(QtCore.QRect(30, 50, 441, 431))
        self.listWidget.setObjectName("listWidget")
        self.listWidget.setIconSize(QSize(32,32))
        self.label = QtWidgets.QLabel(MainWindow)
        self.label.setGeometry(QtCore.QRect(30, 10, 441, 31))
        font = self.font
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setScaledContents(False)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(MainWindow)
        self.pushButton.setGeometry(QtCore.QRect(380, 440, 75, 23))
        self.pushButton.setObjectName("pushButton")

        self.retranslateUi(MainWindow)
        
        self.listWidget.itemClicked.connect(self.ChgmtPoke)
        self.pushButton.clicked.connect(self.retour)
        self.MenuPrecedent = MainWindow
        self.Intitule_Menu_Precedent = ""
        self.AChangerDePoke = False

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("PyQTmon", "PyQTmon"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)

        self.listWidget.setSortingEnabled(__sortingEnabled)
        self.label.setText(_translate("PyQTmon", "Gestion d'Ã©quipe"))
        self.pushButton.setText(_translate("PyQTmon", "Retour"))
        
    def show(self):
        self.listWidget.show()
        self.label.show()
        self.pushButton.show()
    
    def hide(self):
        self.listWidget.hide()
        self.label.hide()
        self.pushButton.hide()
        
    def Menu_Init(self,Menu_Precedent,Intitule_Menu_Precedent,Equipe):
        self.Menu_Precedent = Menu_Precedent
        self.Intitule_Menu_Precedent = Intitule_Menu_Precedent
        self.listWidget.clear()
        Menu_Precedent.hide()
        for Pokemon in Equipe:
            item = QtWidgets.QListWidgetItem()
            font = self.font
            font.setPointSize(10)
            item.setFont(font)
            icon = QtGui.QIcon()
            Path_Mini = Pokemon.Sprite("mini")
            icon.addPixmap(QtGui.QPixmap(Path_Mini), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            item.setIcon(icon)
            _translate = QtCore.QCoreApplication.translate
            item.setText(_translate("PyQTmon", f"{Pokemon.nom} ({int(Pokemon.PV_actuel)}/{int(Pokemon.Stats[0])}) PV"))
            self.listWidget.addItem(item)
        self.show()
        if self.Intitule_Menu_Precedent == "KO_Switch":
            self.pushButton.hide()
        
    def ChgmtPoke(self, item):
        Index = self.listWidget.currentRow()
        if self.Equipe[Index].PV_actuel != 0:
            self.Equipe.permutation(self.Equipe[0], self.Equipe[Index])
            self.listWidget.clear()
            self.Menu_Init(self.MainWindow.map, self.Intitule_Menu_Precedent, self.Equipe)
            self.AChangerDePoke = True
            if self.Intitule_Menu_Precedent == "KO_Switch":
                self.pushButton.show()
                
                
    def retour(self):
        if self.Intitule_Menu_Precedent == "Carte":
            self.MainWindow.Menu = "Carte"
            Carte = self.MainWindow.map
            Carte.show()
            self.Sprite.show()
            self.hide()
            self.__init__(self.MainWindow)
        elif self.Intitule_Menu_Precedent == "Combat":
            self.MainWindow.Menu = "Combat"
            Combat = self.MainWindow.UICombat
            Combat.Init_Combat(self.Equipe, Combat.Pokemon_Adverse)
            Combat.show()
            self.hide()
            if self.AChangerDePoke == True:
                Combat.Tour_de_jeu(-1)
                self.AChangerDePoke = False
        elif self.Intitule_Menu_Precedent == "KO_Switch":
            self.MainWindow.Menu = "Combat"
            Combat = self.MainWindow.UICombat 
            Combat.Init_Combat(self.Equipe, Combat.Pokemon_Adverse)
            Combat.show()
            self.hide()
            self.__init__(self.MainWindow)

        
